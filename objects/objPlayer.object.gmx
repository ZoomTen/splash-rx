<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite57</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprSplashIdleRight</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// create GUI object
if !(instance_exists(objIngameGUI)){
   instance_create(0,0,objIngameGUI);
   }

// THE MASTER!!!!!!!!!!!1 wh Nyro: WHAT?!

sdw = splash_world;
sds = splash_stage;

invinc = 0;
visi = 1;
tflag=0;
lockplr = NLNF;                    // disable locking the player
if !(instance_exists(objFollower)){
instance_create(x,y,objFollower);
}
pdir = 2;                          // 0 = nowhere. 1 = left. 2 = right.
jflag = 0;                         // jump timer
andisayjump = 0;                   // jump flag
tscale = sc;                       // per room scale
l=0;
showdialogvars = 0;
collidednpcid = 0;

rx = resx/tscale; //I keep reading that as Rexy . . .
ry = resy/tscale;

dplayerstate = " "

myeh[0] = 3;
myeh[1] = 2;
myeh[2] = 1;

myeh[3] = 0;
myeh[4] = 0;
myeh[5] = 0;

// just in case Splash's sprite name changes

plrleftsprite = sprSplashLeft;
plrrightsprite = sprSplashRight;
plridleleftsprite = sprSplashIdleLeft;
plridlerightsprite = sprSplashIdleRight;
plrjumpleftsprite = sprSplashJumpLeft;
plrjumprightsprite = sprSplashJumpRight;
plrupsprite = sprSplashClimb;
plrdownleftsprite = sprSplashFallLeft;
plrdownrightsprite = sprSplashFallRight;
plrwallleftsprite = sprSplashWallLeft;
plrwallrightsprite = sprSplashWallRight;
plrdissipatesprite = sprSplashTeleport;
plranimspeed = 0.5;
plridlespeed = 0.25;
jumpthe = 15; // jump timer

   room_speed = 60;
   playergrav = 0.17;
   playerhspeed = 2;
   playervspeed = 6;
   playervdrop = 8;
   playerclimb = 1.5;
   playerjump = 6;
   plranimspeed = plranimspeed / 2;
   plridlespeed = plridlespeed / 2;
   jumpthe = jumpthe * 2;
   myeh[0] = myeh[0] / 2;
   myeh[1] = myeh[1] / 2;
   myeh[2] = myeh[2] / 2;

sprite_index = plridlerightsprite;
image_speed = plridlespeed;

view_wport[0] = resx;
view_hport[0] = resy;
view_wview[0] = resx/tscale;
view_hview[0] = resy/tscale;
view_hborder[0] = resx/tscale;
view_vborder[0] = resy/tscale;
view_object[0] = objFollower;
view_visible[0] = true;
view_enabled = true;
//window_set_size(resx,resy);
//display_set_gui_size(resx,resy);

//if (window_get_height() != rx*tscale
//    &amp;&amp; window_get_width() != ry*tscale
//    &amp;&amp; !window_get_fullscreen()){
//surface_resize(application_surface,rx,ry);
//display_reset(0,false);
//}

//tmr = room_speed * 60 * 10; // should I add a freaking timer to the entire level?

x1=0;
x2=0;
y1=0;
y2=0;

// World background positions. x is array position 0 and y is array position 1.

// null
off[w_menus,0] = 0;
off[w_menus,1] = 0;

// start
off[w_start,0] = 0;
off[w_start,1] = 0;

// snort forest
off[w_forest,0] = 0;
off[w_forest,1] = 0;

// lush tropical
off[w_tropical,0] = 0;
off[w_tropical,1] = 0;

// red hot
off[w_fire,0] = 0;
off[w_fire,1] = -150;

// desert
off[w_desert,0] = -100;
off[w_desert,1] = -150;

// grand dad
off[w_prehist,0] = -100;
off[w_prehist,1] = -100;

// autumn
off[w_autumn,0] = 0;
off[w_autumn,1] = 0;

// winter something
off[w_snow,0] = 0;
off[w_snow,1] = 0;

// eh, figure out the rest :P
off[w_rain,0] = 0;
off[w_rain,1] = 0;

off[w_cave,0] = -50;
off[w_cave,1] = -50;

off[w_night,0] = 0;
off[w_night,1] = 0;

off[w_spooky,0] = 0;
off[w_spooky,1] = 0;

off[w_future,0] = 0;
off[w_future,1] = 0;

off[w_ethan,0] = 0;
off[w_ethan,1] = 0;

off[w_clock,0] = -150;
off[w_clock,1] = 0;

off[w_sky,0] = 0;
off[w_sky,1] = 0;

off[w_meadow,0] = 0;
off[w_meadow,1] = 0;

off[w_ocean,0] = 0;
off[w_ocean,1] = 0;

off[w_clown,0] = 0;
off[w_clown,1] = 0;

off[w_walton,0] = 0;
off[w_walton,1] = 0;

off[w_pig,0] = 0;
off[w_pig,1] = 0;

off[w_base,0] = 0;
off[w_base,1] = 0;

off[w_end,0] = 0;
off[w_end,1] = 0;

off[w_extra,0] = 0;
off[w_extra,1] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visi=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if invinc == 1{
   alarm[2] = 5;
   if visi == 1{visi = 0;}else{visi = 1;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invinc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jflag = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// NPC CODE MOVED TO HERE

if place_meeting(x,y,objNPC)
{
   showdialogvars = 1; // deeebuuuugggggg
   collidednpcid = objNPC.onpcid;
   
   if keyboard_check_pressed(ord('Z')){
    if npctalkedto[objNPC.onpcid] = 0{
        npctalkedto[objNPC.onpcid] = 1;
        lockplr = LNF;
        scrTextMain(1,npctxindex[objNPC.onpcid]+npctxid[objNPC.onpcid],NLF+4,1);
        // NLF+4 tells the game to set the event trigger (TRIGGEREDtm wh) and
        // sets the text state to "not locked, finished"
        }
   }
   
}

else{
showdialogvars = 0;
collidednpcid = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*window_set_size(resx,resy);

if keyboard_check(ord("W")){resy -= 1}
if keyboard_check(ord("A")){resx -= 1}
if keyboard_check(ord("S")){resy += 1}
if keyboard_check(ord("D")){resx += 1}*/

//parallaxes soraxesses Nyro: SORAXESS IS THE BEST OC EVER!!!!!!!!!!!
// Zy: LOOOOOOL TOTALLY. creepy rex mask

background_x[0] = view_xview[0]/2 + off[splash_world,0];
background_x[1] = view_xview[0]/4 + off[splash_world,0];
background_x[2] = view_xview[0]/8 + off[splash_world,0];
background_y[0] = view_yview[0]/2 + off[splash_world,1];
background_y[1] = view_yview[0]/4 + off[splash_world,1];
background_y[2] = view_yview[0]/8 + off[splash_world,1];
if sdw == w_snow{ //animate snow background
   myeh[3] += myeh[0];
   myeh[4] += myeh[1];
   myeh[5] += myeh[2];
// override snorts
   background_y[0] = myeh[3] + (view_yview[0] / 2);
   background_y[1] = myeh[4] + (view_yview[0] / 2);
   background_y[2] = myeh[5] + (view_yview[0] / 2);
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Found in the misty forests of your armpit! :D wh

if splash_score &lt; 0{
   splash_score = 0; // k
}

if debugm == true{
   switch lockplr{
      case NLNF:
         dplayerstate = "Not locked, not finished";
         break;
      case NLF:
         dplayerstate = "Not locked, finished";
         break;
      case LNF:
         dplayerstate = "Locked, not finished";
         break;
      case LF:
         dplayerstate = "Locked, finished";
         break;
      default:
         dplayerstate = "Unknown";
         break;
   }
}

if keyboard_check_pressed(ord("Q")){
room_restart();}  // CHEAT!!!11!!!1!! wh

// Begin Splash player code.
// Main player movements
// You can only move when the lock flag isn't set


if !(lockplr &amp; 2 == 2){
/// Gravity control code ///
      gravity_direction = 270;

      if place_free(x,y+1){gravity = playergrav;}               // Okay, you stupid clown, check whether in the air!!!
      else {gravity = 0;}

      if vspeed &gt; playervspeed{vspeed = playervspeed;}          // Molly the dumb doll, limit the stupid vertical speed!

      if place_meeting(x,y,objClimb)                            // Ok, so, one more, thing, stupid! Check whether the ninja
      {                                                         // player is on the dumb ugly green ladder thing!
         gravity = 0;
         vspeed = 0;
      }
                                                                // There! Now make a bunch of monkey farting sounds and be a
                                                                // clown...wait, you already are one!!!
   
/// Keyboard control code ///
      if !(place_free(x,y+1)){
      andisayjump = 0;
      }
      
      if keyboard_check(vk_left)                                // Left event
      {
         pdir = 1;
         if place_free(x-playerhspeed,y){
            x -= playerhspeed;
            if (place_meeting(x,y+2,objWallSlippery) || place_meeting(x,y+2,objectBigWallSlippery)){hspeed = -playerhspeed/1.1;}
            if place_free(x,y+2){
               hspeed = 0; // don't let hspeed screw up movement while jumping after slipping
            }
         }    
      }
      
      if keyboard_check(vk_right)                               // Right event
      {
         pdir = 2;
         if place_free(x+playerhspeed,y){
            x += playerhspeed;
            if (place_meeting(x,y+2,objWallSlippery) || place_meeting(x,y+2,objectBigWallSlippery)){hspeed = playerhspeed/1.1;}
            if place_free(x,y+2){
               hspeed = 0; // don't let hspeed screw up movement while jumping after slipping
            }
         }   
      }

      if keyboard_check(vk_up)                                  // Up event [Jump / climb up]
      {
      hspeed = hspeed/1.01; // ice snorts
         if place_meeting(x,y,objClimb)
         {
            if place_free(x,y-playerclimb){y -= playerclimb;}
         }
         else{
            if !(place_free(x,y+1)){
               vspeed = -playerjump;
               andisayjump = 1;
            }
         }
      }
      
      if keyboard_check_released(vk_up) // hacky
      {
         if (andisayjump = 1){
            vspeed = vspeed / 2;
            andisayjump = 0;
         }
      }
      
      if keyboard_check(vk_down)                                // Down event [Climb down]
      {
         if place_meeting(x,y,objClimb)
         {
            if place_free(x,y+(playerclimb*1.5)){y += playerclimb*1.5;}
         }
      }
      
      if keyboard_check_pressed(vk_space)                       // Space event [Shoot]
      {
         if splash_ammo &gt; 0
         {
            if pdir == 1
            {
               shoot = instance_create(x,y-12,objWeapon);
               with shoot{motion_set(180,12);}
            }
            if pdir == 2
            {
               shoot = instance_create(x,y-12,objWeapon);
               with shoot{motion_set(0,12);}
            }
            splash_ammo -= 1;
         }
      }

      // workarounds?????????
      
   if powermeter == 1{
      if unlockedSpells &gt; 0{                                    // C event [spell]
         if keyboard_check_pressed(ord("C")){
            if !(instance_exists(objSpellOverlay)){
               instance_create(0,0,objSpellOverlay);
               }
            }
      }
   }
         
      
/// Sprite control code ///

      if place_meeting(x,y,objClimb)                            // If on snort vine
      {
         sprite_index = plrupsprite;
         if (keyboard_check(vk_up) == 1 || keyboard_check(vk_down) == 1){image_speed = 0.1;}else{image_speed=0;}
      }
      else
      {
      
      if place_free(x,y+2)                                      // If freefalling
      {
        if jflag == 0
        {
           if pdir == 1
           {
              image_speed = plranimspeed;
              sprite_index = plrdownleftsprite;
           }
           else if pdir == 2{
              image_speed = plranimspeed;
              sprite_index = plrdownrightsprite;
           }
        }
      }
      
      if !(place_free(x,y+3))                                   // If on ground
      {
         if keyboard_check(vk_left)                             // If left key pressed
         {
            if !(keyboard_check(vk_up))
            {
               sprite_index = plrleftsprite;
               image_speed = plranimspeed;
            }
         }
         
         else if keyboard_check(vk_right)                            // If right key pressed
         {
            if !(keyboard_check(vk_up))
            {
               sprite_index = plrrightsprite;
               image_speed = plranimspeed;
            }
         }
         
         else
         {
            if pdir == 1
            {
                 image_speed = plridlespeed;
                 sprite_index = plridleleftsprite;
            }
            else if pdir == 2
            {
                 image_speed = plridlespeed;
                 sprite_index = plridlerightsprite;
            }
         }
         
         if keyboard_check(vk_up)                          // If jumping
         {
            if pdir == 1
            {
            sprite_index = plrjumpleftsprite;
            image_speed = plranimspeed;
            }
            else if pdir == 2
            {
            sprite_index = plrjumprightsprite;
            image_speed = plranimspeed;
            }
         jflag = 1;
         alarm[0] = jumpthe;
         }
      }
      
      }
      
      if keyboard_check(vk_up)                                  // Wall slide mechanic
      {
         if keyboard_check(vk_left)
         {
            if !(place_free(x-3,y))
            {
               vspeed = -playerjump/2;
               image_speed = plridlespeed;
               sprite_index = plrwallleftsprite;
            }
         }
         if keyboard_check(vk_right)
         {
            if !(place_free(x+3,y))
            {
               vspeed = -playerjump/2;
               image_speed = plridlespeed;
               sprite_index = plrwallrightsprite;
            }
         }
      }
      
      if !(place_free(x,y)){hspeed=2;}
      // is this even necessary?!
   /*
      if (!place_free(x+hspeed,y))
      {
         if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
         if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
         hspeed=0;
      }
  
      if (!place_free(x,y+vspeed))
      {
         if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
         if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
         vspeed=0;
      }
      if (!place_free(x+hspeed,y+vspeed))
      {
         hspeed=0;
      }
  */
      
}else{
   hspeed = 0;
   if place_free(x,y+1){
      gravity = playergrav;
      }
   else{
      gravity = 0;
      vspeed = 0;
   }
   image_speed = plridlespeed;
   sprite_index = plridlerightsprite;
}

if place_meeting(x,y,objDoor)                                   // If reached goal
{
   if (lockplr != LNF){image_index=0;}
   lockplr = LNF;
   sprite_index = plrdissipatesprite;
   image_speed = plranimspeed;
   if tflag == 0{alarm[3]=10;tflag=1;}
   if !(instance_exists(objFadeOutRoomNEXT)){instance_create(0,0,objFadeOutRoomNEXT);}
}

if place_meeting(x,y,objDoorToBoss)                                   // If reached goal
{
   if (lockplr != LNF){image_index=0;}
   lockplr = LNF;
   sprite_index = plrdissipatesprite;
   image_speed = plranimspeed;
   if tflag == 0{alarm[3]=10;tflag=1;}
   if !(instance_exists(objFadeOut)){tb = instance_create(0,0,objFadeOut);with tb{targetroom = rmBossIntro};splash_stage+=1;scrSave();}
   //lockplr = LNF;
   //if !(instance_exists(objFadeOut)){tb = instance_create(0,0,objFadeOut);with tb{targetroom = rmBossIntro};splash_stage+=1;scrSave();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objectBigWallSlippery">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWallSlippery">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFakePlatform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBossBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj1up">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splash_score += 815;
splash_hits -= 1;
with (other){
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splash_score += 815;
splash_ammo += 15;
with (other){
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objRubee">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splash_score += 560;
scrPlayAud(snd_collect,true);
with (other){
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSnake1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed &gt; 0 &amp;&amp; y &lt; other.y+8{
   // Destroy that annoying monster already!!!
   splash_score += 5120;
   scrPlayAud(snd_kill,true);
   with (other){
      instance_change(objMonster1Flat,true);
   }
}
else{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFriday">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(instance_exists(objTextSpawner)){
if lockplr == NLNF{
   lockplr = LNF;
   scrTextMain(1,2,LF,1);
   }
else{
   with (other){instance_destroy();}
   with (objFridayOwner){image_index=1;}
   instance_create(0,0,objFadeOutRoomNEXT);
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   //OOOH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object28">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlatform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objDeath">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   // Destroy the nice old player because I want you to!!!
   scrKillPlayer();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWallBG">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed &gt;= 0{
   other.solid = true;
   action_move_contact(direction,24,true);
   vspeed = 0;
   hspeed = 0;
   }
else{
   other.solid = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBigWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
   action_move_contact(direction,12,false);
   vspeed = 0;
   hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* oh

REALLY OLD CODE

   // Okay you stupid clown, check whether in the air!!!
   if place_free(x,y+1){
      gravity = playergrav;
         if jflag == 0{
            if pdir == 1{
               image_speed = plranimspeed;
               sprite_index = plrdownleftsprite;
            }
            else if pdir == 2{
               image_speed = plranimspeed;
               sprite_index = plrdownrightsprite;
            }
         }
      }
   else{
      gravity = 0;
         if pdir == 1{
            image_speed = plridlespeed;
            sprite_index = plridleleftsprite;
         }
         else if pdir == 2{
            image_speed = plridlespeed;
            sprite_index = plridlerightsprite;
         }
      }
      
   // Molly the dumb doll, limit the stupid vertical speed!
   if vspeed &gt; playervspeed{
      vspeed = playervspeed;
      }
      
   // Ok, so, one more, thing, stupid! Check whether the ninja
   // player is on the dumb ugly green ladder thing!
   if place_meeting(x,y,objClimb){
      gravity = 0;
      vspeed = 0;
      sprite_index = plrupsprite;
      image_speed = 0;
      }
      
   // There! Now make a bunch of monkey farting sounds and be a clown...
   // wait, you already are one!!!
   
   if !(place_free(x-3,y)){
      if place_free(x,y+2){
         sprite_index = plrwallleftsprite;
         if vspeed &gt;=2 -1{
            image_speed = plranimspeed;
            }
         else{
            image_speed = 0;
            }
         if keyboard_check(vk_up){
            vspeed -= 0.2;
         }
      }
   }
   
   if !(place_free(x+3,y)){
      if place_free(x,y+2){
         sprite_index = plrwallrightsprite;
         if vspeed &gt;= 2{
            image_speed = plranimspeed;
            }
         else{
            image_speed = 0;
            }
         if keyboard_check(vk_up){
            vspeed -= 0.4;
         }
      }
   }
   
   // Keyboard actions.
   if keyboard_check_released(vk_left){
      sprite_index = plridleleftsprite;
      image_speed = plridlespeed;
   }
   
   if keyboard_check_released(vk_right){
      sprite_index = plridlerightsprite;
      image_speed = plridlespeed;
   }
   
   if keyboard_check(vk_left){
      pdir = 1;
         if place_free(x-playerhspeed,y){
            x -= playerhspeed;
            if !(keyboard_check(vk_up)){
               if !(place_free(x,y+1)){
                  sprite_index = plrleftsprite;
                  image_speed = plranimspeed;
               }
            }
         }
         else if place_free(x-playerhspeed,y-playervdrop){
            x -= playerhspeed;
            y -= playervdrop;
            move_contact_solid(270,playervdrop);
         }
   }
   
   if keyboard_check(vk_right){
      pdir = 2;
         if place_free(x+playerhspeed,y){
            x += playerhspeed;
            if !(keyboard_check(vk_up)){
               if !(place_free(x,y+1)){
                  sprite_index = plrrightsprite;
                  image_speed = plranimspeed;
               }
            }
         }
         else if place_free(x+playerhspeed,y-playervdrop){
            x += playerhspeed;
            y -= playervdrop;
            move_contact_solid(270,playervdrop);
         }
   }
   
   if keyboard_check(vk_up){
      if place_meeting(x,y,objClimb){
         y -= playerclimb;
         image_speed = plridlespeed;
      }
      else{
         if !(place_free(x,y+1)){
            vspeed = -playerjump
               if pdir == 1{
                  sprite_index = plrjumpleftsprite;
                  image_speed = plranimspeed;
               }
               else if pdir == 2{
                  sprite_index = plrjumprightsprite;
                  image_speed = plranimspeed;
               }
         jflag = 1;
         alarm[0] = jumpthe;
         }
      }
   }
   
   if keyboard_check(vk_down){
      if place_meeting(x,y,objClimb){
         y += playerclimb;
         image_speed = plridlespeed;
      }
   }
   
   if keyboard_check_pressed(vk_space){
      if ammo &gt; 0{
         if pdir == 1{
            bx = instance_create(x,y-12,objWeapon);
            with (bx){
               motion_set(180,12);
               }
         }
         else{
            bx = instance_create(x,y-12,objWeapon);
            with (bx){
               motion_set(0,12);
               }
         }
         ammo -= 1;
      }
   }
   
   
   // yummy code from cantavanda
   // Nyro: canada wh
   
if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
    vspeed=0;
}
if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_rectangle(window_get_x(),window_get_y(),rx*sc,ry*sc);
surface_resize(application_surface,rx*sc,ry*sc);
display_reset(0,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_wrap(true,true,-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// debug data
if debugm == true{
if hyptaur == 1{
   draw_set_halign(fa_left);
   draw_set_alpha(1);
   draw_set_color(c_white);
   draw_set_font(font1);
   draw_text(0,50,string(sdw) + "-" + string(sds) + ". Lives: " + string(splash_lives));
   draw_text(0,62,"Game Speed: 60" + ", actual FPS: " + string(fps));
   draw_text(0,74,"SFX Volume: " + string(v_sfx) + "%. Music Volume: " + string(v_mus) + "%.");
   draw_text(0,86,"Player state: " + dplayerstate + ", player direction ..." + string(pdir));
   draw_text(0,98,"Room number " + string(room));
   draw_text(0,110,"Screen size: " + string(resx) + "x" + string(resy));
   if showdialogvars = 1{
   draw_text(0,122,"Collided NPC: " + string(collidednpcid));
   draw_text(0,134,"Current NPC Text ID : " + string(npctxid[collidednpcid]));
   draw_text(0,146,"NPC text limit : " + string(npctxlimit[collidednpcid]));
   draw_text(0,158,"NPC talked to? : " + string(npctalkedto[collidednpcid]));
   }
   draw_text(0,160, string(andisayjump));
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// debug variables
x1=string_replace_all(string_format(x, 3, 0)," ","0")
y1=string_replace_all(string_format(y, 3, 0)," ","0")
x2=string_replace_all(string_format(view_xview[0], 3, 0)," ","0")
y2=string_replace_all(string_format(view_yview[0], 3, 0)," ","0")

// sprite
draw_set_color(c_white);
if visi == 1{draw_sprite(sprite_index,image_index,x,y);}

// debug mode
if debugm == true{
if hyptaur == 1
{
draw_set_color(c_black);
draw_set_font(monospacegood);
draw_set_halign(fa_center);
draw_text(x-10,y-40,"P:" + x1 + ", " + y1);
draw_text(x-10,y-50,"C:" + x2 + ", " + y2);
}
}
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
