<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();
scrPlayAud(msc_debug,false);
optionsel = 0;
optionmax = 2;
sndt = 0;
sndtmax = 15;
instance_create(0,0,objFadeIn);
xzl = 0;
yoff = 100;
xoff = 70;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if xzl == 0{
if keyboard_check_pressed(vk_down){
   if optionsel &lt; optionmax{
      optionsel += 1;
      scrPlayAud(snd_text,true);
   }
}

if keyboard_check_pressed(vk_up){
   if optionsel &gt; 0{
      optionsel -= 1;
      scrPlayAud(snd_text,true);
   }
}

if keyboard_check_pressed(vk_right){
   switch (optionsel){
      case 0:
         if v_sfx &lt; 100{v_sfx += 10;}else if v_sfx == 100{v_sfx = 0;}
         break;
      case 1:
         if v_mus &lt; 100{v_mus += 10;}else if v_mus == 100{v_mus = 0;}
         break;
      /*case 2:
         if sndt &lt; sndtmax{sndt += 1;}else if sndt == sndtmax{sndt = 0;}*/
      default:
         break;
   }
}

if keyboard_check_pressed(vk_left){
   switch (optionsel){
      case 0:
         if v_sfx &gt; 0{v_sfx -= 10;}else if v_sfx == 0{v_sfx = 100;}
         break;
      case 1:
         if v_mus &gt; 0{v_mus -= 10;}else if v_mus == 0{v_mus = 100;}
         break;
      /*case 2:
         if sndt &gt; 0{sndt -= 1;}else if sndt == 0{sndt = sndtmax;}*/
      default:
         break;
   }
}

if keyboard_check_pressed(ckey){
   if optionsel == 2{
      /*audio_stop_all();
      scrPlayAud(sndid[sndt,0],false);*/
      xzl = 1;
   scrSaveOps();
   instance_create(0,0,objFadeOut);
   objFadeOut.targetroom = rmMenu;
   }
}
/*if keyboard_check_pressed(skey){
   audio_stop_all();
}*/

/*if keyboard_check_pressed(vk_enter){
   xzl = 1;
   scrSaveOps();
   instance_create(0,0,objFadeOut);
   objFadeOut.targetroom = rmMenu;
}*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(0.7);
draw_roundrect(50+xoff,(2*40)+yoff,620+xoff,(12*40)+yoff,false);
draw_set_color(c_white);
draw_set_alpha(1);
draw_text(70+xoff,((optionsel+2)*40)+20+yoff,"-&gt;");
draw_text(100+xoff,20+(2*40)+yoff,guitext[7]);
draw_text(100+xoff,20+(3*40)+yoff,guitext[8]);
draw_text(100+xoff,20+(4*40)+yoff,guitext[9]);
draw_text(100+xoff,20+(8*40)+yoff,guitext[10]);
draw_text(100+xoff,20+(9*40)+yoff,guitext[11]);
draw_text(100+xoff,20+(10*40)+yoff,guitext[12]);

draw_rectangle(270+xoff,20+(2*40)+yoff,270+320+xoff,20+(2*40)+yoff+20,true);
draw_rectangle(270+xoff,20+(3*40)+yoff,270+320+xoff,20+(3*40)+yoff+20,true);

draw_set_alpha(0.7);
draw_rectangle(270+xoff,20+(2*40)+yoff,270+(320*(v_sfx/100))+xoff,20+(2*40)+yoff+20,false);
draw_rectangle(270+xoff,20+(3*40)+yoff,270+(320*(v_mus/100))+xoff,20+(3*40)+yoff+20,false);
draw_set_alpha(1);
//draw_rectangle(200,20+(3*40),500,((3*40)+40)*(v_mus/100),false);
//draw_text(200,20+(2*40)+yoff,string(v_sfx));
//draw_text(200,20+(3*40)+yoff,string(v_mus));
/*draw_text(440,20+(2*40)+yoff,string(sndt));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
