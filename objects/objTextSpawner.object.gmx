<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-499</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dis = 0; // delayyyyy
dfont = font_add_sprite(sprFont,ord(" "),true,2);   // create font
dmode = 0; // dialog mode

spd = 1;   // Message speed. The bigger the longer the text will render. Cannot be 0.
mcur = 0;  // Current message index
mdrw = "";
chrz = 0;  // Number of characters printed

//hold = 0;  it's supposed to speed up text if you hold contkey. But idfk how it works.

// Find message end.
for (n=0; msg[n]!="%"; n+=1)
{
mend = n; // Message index end is where the "%" is located
}

if msg[0] == "!!E"
{
mcur = 1;
   for (n=1; n &lt;= mend; n+=1){
      msg[n] = base64_decode(msg[n]);
   }
}

mlen = string_length(msg[mcur]); //Message length
contkey = ord("Z"); // fallback continue key
skipkey = ord("X"); // fallback skip key
enableskip = true; // Allow type skipping by pressing skipkey

alarm[0]=1;   //kickstart Nyro: KICKSTARTER(TM)

// border stuff
benb = 0;  // border enable
aenb = 0;  // arrow enable
wid = 1;
hei = 1;
size = 12;
endr = 1;  // end lockplr result
sepp = 32; // line height


soundt = true; // typing sounds Nyro: In a stream? Wh Zy: LOL OH MY GOD!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dis = 0;
if gspeed = 0{
alarm[0] = spd;  // loop after spd delay
}
else{
alarm[0] = spd * 2;  // loop after spd delay
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Text typing routine. Nyro: You're on dish detail! Wh
if dis == 0{
if chrz &lt; mlen{   // While typing continues

   if string_char_at(msg[mcur],chrz+1)=="`"{
   // ` is the command interpreter symbol
   // a backslash before it indicates a literal ` Nyro: `. ME USING THE ` AS AN APOSTROPHE(TM)
         if string_char_at(msg[mcur],chrz+2) == "R"{ // r for reactions!!! xdddd Nyro: yum
         // if a 2 digit number follows "R" set the face ID to that
         // might cause some problems if we have something like 100 snorts in the game wh
            fid = real(string_char_at(msg[mcur],chrz+3) + string_char_at(msg[mcur],chrz+4));
            chrz += 4;
            }
            
    }
      
   chrz += 1;
   mdrw = mdrw + string_char_at(msg[mcur],chrz);  // append current character pointer to mdrw
   if soundt == true{
      if skipcasterloads == 0{
         if !(string_char_at(msg[mcur],chrz) == " "){
            scrPlayAud(snd_text,true);
         }
         else{
            if dmode == 1{
               alarm[1] = 3;
               dis = 1;
            }
            audio_stop_sound(snd_text);
         }
      }
   }
   }
if gspeed = 0{
alarm[0] = spd;  // loop after spd delay
}
else{
alarm[0] = spd * 2;  // loop after spd delay
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if chrz == mlen{   // if done typing
if aenb == 1{
if !(instance_exists(objArrow)){
   if mcur != mend{
      instance_create(x+(wid*16)-32,y+(hei*16)-16,objArrow);
      }
   }
}
if keyboard_check_pressed(contkey){
      if mcur &lt; mend{  // if not message end
         mcur += 1;
         chrz = 0;
         mdrw = "";   // clear mdrw
         mlen = string_length(msg[mcur]);
         if aenb == 1{
         with (objArrow){
            instance_destroy();
            }
         }
         }
      else{
         if endr &lt; 4{lockplr = endr;}
         else{eventtrigger = 1; lockplr = endr-4;}
         // since possible player lock values are 0-3,
         // 4-7 sets lock values while setting some event trigger
         // because npc.
         font_delete(dfont);   // font no longer needed
         if instance_exists(objDialogFcs){
            with(objDialogFcs){instance_destroy();}
         }
         instance_destroy();
         }
      }
   }
   
if enableskip == true{
if keyboard_check_pressed(skipkey){
   mdrw = "";   // clear mdrw
   for (i=1; i&lt;=mlen; i+=1){   // copy everything at once
   
      if string_char_at(msg[mcur],i)=="`"{ //repeat command interpreter
         if string_char_at(msg[mcur],i+1) == "R"{
            i += 4;
            }    
      }
      
      mdrw = mdrw + string_char_at(msg[mcur],i);
   }
   chrz = mlen;   // set continue flag
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if benb == 1{
draw_set_color(c_white);
draw_rectangle(x-size,y-size,x+(wid*16)+size,y+(hei*16)+size,false);
draw_sprite(sprBorder,0,x-16,y-16);   // top left
draw_sprite_stretched(sprBorder,1,x,y-16,(wid*16),16);  // top
draw_sprite(sprBorder,2,x+(wid*16),y-16);  // top right
draw_sprite_stretched(sprBorder,6,x-16,y,16,(hei*16));  // left
draw_sprite_stretched(sprBorder,7,x+(wid*16),y,16,(hei*16));  // right
draw_sprite(sprBorder,3,x-16,y+(hei*16));   // bottom left
draw_sprite_stretched(sprBorder,4,x,y+(hei*16),(wid*16),16);  // bottom
draw_sprite(sprBorder,5,x+(wid*16),y+(hei*16));  // bottom right
}
draw_set_font(dfont);
draw_set_alpha(0.6);
draw_set_color(c_black);
draw_text_ext(x+1,y+1,mdrw,sepp,wid*16);
draw_set_alpha(1);
draw_set_color(c_white);
draw_text_ext(x,y,mdrw,sepp,wid*16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
